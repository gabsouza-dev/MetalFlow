{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/loading-indicator.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell' && !isNullOrUndefined(control.grid.editModule)) {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, Property } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n/**\n * Defines TreeGrid column\n */\nvar TreeGridColumn = /** @class */ (function (_super) {\n    __extends(TreeGridColumn, _super);\n    function TreeGridColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], TreeGridColumn.prototype, \"columns\", void 0);\n    return TreeGridColumn;\n}(Column));\nexport { TreeGridColumn };\n/**\n * Defines stacked tree grid column\n */\nvar StackedColumn = /** @class */ (function (_super) {\n    __extends(StackedColumn, _super);\n    function StackedColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StackedColumn;\n}(TreeGridColumn));\nexport { StackedColumn };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n/** @hidden */\nexport var actionFailure = 'actionFailure';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var _a;\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n        if (!isNullOrUndefined(this.parent['parentQuery']) && this.parent.selectionSettings.persistSelection\n            && this.parent['columnModel'].filter(function (col) { return col.type === 'checkbox'; }).length > 0\n            && isRemoteData(this.parent)) {\n            if (this.parent['parentQuery'].length > 0) {\n                (_a = this.parent.query.queries).push.apply(_a, this.parent['parentQuery']);\n                this.parent['parentQuery'] = [];\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        if (isNullOrUndefined(rowIndexes)) {\n            var error = 'The provided value for the rowIndexes is undefined. Please ensure the rowIndexes contains number.';\n            this.parent.trigger(events.actionFailure, { error: error });\n        }\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.grid.currentViewData.filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.grid.currentViewData.indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0] ? tr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0]\n                : movableTr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (this.parent.enableVirtualization || this.parent.allowPaging) && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.filterModule.filteredResult : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed && !isNullOrUndefined(args.row)) {\n                this.parent['toggleRowVisibility'](args.row, 'e-childrow-hidden');\n                var rowsObj = this.parent.grid.getRowsObject();\n                if (!this.parent.grid.isFrozenGrid() && !isNullOrUndefined(args.row.getAttribute('data-uid'))) {\n                    rowsObj.filter(function (e) { return e.uid === args.row.getAttribute('data-uid'); })[0].visible = false;\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow && !isNullOrUndefined(args.row)) {\n                var display = parentrec[0].expanded ? 'e-childrow-visible' : 'e-childrow-hidden';\n                this.parent['toggleRowVisibility'](args.row, display);\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (!isNullOrUndefined(args.row)) {\n            if (args.row.querySelector('.e-treegridexpand')) {\n                args.row.setAttribute('aria-expanded', 'true');\n            }\n            else if (args.row.querySelector('.e-treegridcollapse')) {\n                args.row.setAttribute('aria-expanded', 'false');\n            }\n            if (this.parent.enableCollapseAll && this.parent.initialRender) {\n                if (!isNullOrUndefined(data.parentItem)) {\n                    this.parent['toggleRowVisibility'](args.row, 'e-childrow-hidden');\n                }\n            }\n        }\n        var dragStartData = 'dragStartData';\n        var draggedRecord = 'draggedRecord';\n        if (this.parent.rowDragAndDropModule && this.parent.grid.rowDragAndDropModule && (this.parent.grid.rowDragAndDropModule[\"\" + dragStartData] ||\n            this.parent.rowDragAndDropModule[\"\" + draggedRecord]) && this.parent.getContentTable().scrollHeight <= this.parent.getContent().clientHeight) {\n            var lastRowBorder = 'lastRowBorder';\n            var lastVisualData = this.parent.getVisibleRecords()[this.parent.getVisibleRecords().length - 1];\n            if (lastVisualData.uniqueID === args.data.uniqueID && !isNullOrUndefined(args.row) && !args.row.cells[0].classList.contains('e-lastrowcell')) {\n                this.parent[\"\" + lastRowBorder](args.row, true);\n            }\n        }\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var thisRef_1 = this;\n            // tslint:disable-next-line:typedef\n            thisRef_1.parent[\"\" + renderReactTemplates](function () {\n                thisRef_1.parent.trigger(events.rowDataBound, args);\n            });\n        }\n        else {\n            this.parent.trigger(events.rowDataBound, args);\n        }\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                if (this.parent['isFromGantt'] && this.parent.loadChildOnDemand) {\n                    iconRequired = data.hasChildRecords;\n                }\n                else {\n                    iconRequired = !(data.childRecords.length === 0);\n                }\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '4px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            summaryData = isNullOrUndefined(summaryData) ? null : summaryData;\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        this.parent['args'] = args;\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        if ((isNullOrUndefined(this.parent.rowTemplate) && !(this.parent.isReact))\n            || ((this.parent.isReact) &&\n                !args.column['template'])) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n        else if (((this.parent.isReact) &&\n            treeColumn.field !== args.column.field)) {\n            var renderReactTemplates = 'renderReactTemplates';\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var thisRef_2 = this;\n            // tslint:disable-next-line:typedef\n            thisRef_2.parent[\"\" + renderReactTemplates](function () {\n                thisRef_2.parent.trigger(events.queryCellInfo, args);\n            });\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    // eslint-disable-next-line @typescript-eslint/no-this-alias\n                    var thisRef_3 = this;\n                    // tslint:disable-next-line:typedef\n                    thisRef_3.parent[\"\" + renderReactTemplates](function () {\n                        thisRef_3.parent.trigger(events.queryCellInfo, args);\n                    });\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var rows = _this.parent.getDataRows();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                if (rows.length !== 0) {\n                    for (var j = 0; j < rowsObj.length; j++) {\n                        if (rowsObj[parseInt(j.toString(), 10)].isDataRow\n                            && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                            var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                            var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                            var td = rows.length >= rowsObj.length\n                                ? _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent)\n                                : rows[rowsObj[parseInt(j.toString(), 10)].index].querySelector('.e-templatecell');\n                            cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                            var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                                .cells[parseInt(cellIndex.toString(), 10)];\n                            _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                        }\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    // eslint-disable-next-line\n    Render.prototype.reactTemplateRender = function (args, callBack) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates](callBack);\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (!isNullOrUndefined(data) && Object.keys(data).length === 0\n            && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req;\n                        if (e.result) {\n                            req = 0;\n                        }\n                        else {\n                            req = 1;\n                        }\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((!this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && !this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && !this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = !this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                this.parent['toggleRowVisibility'](rowDetails.rows[parseInt(i.toString(), 10)], 'e-childrow-visible');\n                if (!this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        var idMappingValue = parseInt(rowDetails.record[this.parent.idMapping], 10);\n        if (isNaN(idMappingValue)) {\n            idMappingValue = rowDetails.record[this.parent.idMapping].toString();\n        }\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', idMappingValue.toString());\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', idMappingValue.toString());\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        if (rowDetails.action === 'remoteExpand' && this.parent.grid.filterModule && this.parent.grid.filterModule['value']) {\n            var filterqry = this.parent.grid.getDataModule().generateQuery().queries.filter(function (e) { return e.fn !== 'onPage' && typeof e.e.predicates !== 'undefined'; });\n            qry.queries.push(filterqry[0]);\n        }\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx;\n            var idMapping = _this.parent.idMapping;\n            if (_this.parent['isGantt'] && _this.parent.loadChildOnDemand && _this.parent.hasChildMapping) {\n                for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                    if (rowDetails.record[idMapping] === _this.parent.grid.currentViewData[i][idMapping]) {\n                        inx = i;\n                        break;\n                    }\n                }\n            }\n            else {\n                inx = datas.indexOf(rowDetails.record);\n            }\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            var resultChildData = [];\n            if (rowDetails.action === 'remoteExpand' && _this.parent.grid.filterModule && _this.parent.grid.filterModule['value']) {\n                for (var i = 0; i < datas.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(datas[parseInt(i.toString(), 10)], _this.parent.parentIdMapping) && datas[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] !== null && datas[parseInt(i.toString(), 10)].level === 0) {\n                        datas.splice(i, 1);\n                        i--;\n                    }\n                }\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping]) {\n                        if (Object.prototype.hasOwnProperty.call(result, i)) {\n                            resultChildData.push(result[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                result = resultChildData;\n            }\n            if (_this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n                rowDetails.record.childRecords = [];\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] && Object.prototype.hasOwnProperty.call(result, i)) {\n                        rowDetails.record.childRecords.push(result[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else {\n                rowDetails.record.childRecords = result;\n            }\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            delete parentData.childRecords;\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                            if (rowDetails.action === 'remoteExpand') {\n                                result[parseInt(r.toString(), 10)].childRecords = [];\n                                result[parseInt(r.toString(), 10)].childRecords = rowDetails.record.childRecords;\n                            }\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && !_this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && !_this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (rowDetails.action === 'remoteExpand' && _this.parent.allowPaging && _this.parent.pageSettings.pageSizeMode === 'All') {\n                _this.parent.grid.pageSettings.totalRecordsCount = _this.parent.grid.pageSettings.totalRecordsCount + result.length;\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            var childMapping = currentData[this.parent.childMapping];\n            var hasChildren = !isNullOrUndefined(childMapping) && childMapping.length > 0;\n            var shouldCount = isCountRequired(this.parent);\n            var hasChildMapping = currentData[this.parent.hasChildMapping];\n            if ((hasChildren && !shouldCount) || (hasChildMapping && shouldCount)) {\n                currentData.hasChildRecords = true;\n            }\n            else {\n                currentData.hasChildRecords = false;\n            }\n            if ((!isNullOrUndefined(childMapping) && !shouldCount) ||\n                (hasChildMapping) && shouldCount) {\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(childMapping)) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && !this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: args });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { getNumberFormat } from '@syncfusion/ej2-grids';\nimport { Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { RowDropSettings, getUid, parentsUntil } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.isFromChartSide = false;\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection, TreeLogger);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        var freezeModulePresent = _this.injectedModules.filter(function (e) {\n            if (e.prototype.getModuleName() === 'freeze') {\n                Grid.Inject(FreezeColumn);\n            }\n        });\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * Sends a post request to export tree grid to excel file in server side.\n     *\n     * @param  {string} url - Pass URL for server side excel export action.\n     * @returns {void}\n     */\n    TreeGrid.prototype.serverExcelExport = function (url) {\n        this.isExcel = true;\n        this.exportTreeGrid(url);\n    };\n    /**\n     * Sends a post request to export tree grid to pdf file in server side.\n     *\n     * @param  {string} url - Pass URL for server-side pdf export action.\n     * @returns {void}\n     */\n    TreeGrid.prototype.serverPdfExport = function (url) {\n        this.isExcel = false;\n        this.exportTreeGrid(url);\n    };\n    /**\n     * Sends a Post request to export Tree Grid to CSV file in server side.\n     *\n     * @param  {string} url - Pass URL for server-side csv export action.\n     * @returns {void}\n     */\n    TreeGrid.prototype.serverCsvExport = function (url) {\n        this.isExcel = true;\n        this.exportTreeGrid(url);\n    };\n    /**\n     * Exports the TreeGrid data to the specified URL using a POST request.\n     *\n     * @param {string} url - Defines exporting url\n     * @returns {void}\n     */\n    TreeGrid.prototype.exportTreeGrid = function (url) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treegrid = this;\n        var query = treegrid.grid.getDataModule().generateQuery(true);\n        var state = new UrlAdaptor().processQuery(new DataManager({ url: '' }), query);\n        var queries = JSON.parse(state.data);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var treeGridModel = JSON.parse(this.addOnPersist(['allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates',\n            'filterSettings', 'columns', 'locale', 'searchSettings', 'idMapping', 'parentIdMapping', 'childMapping', 'treeColumnIndex']));\n        var include = ['field', 'headerText', 'type', 'format', 'visible',\n            'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n        treeGridModel.filterSettings.columns = queries.where;\n        treeGridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n        treeGridModel.sortSettings.columns = queries.sorted;\n        treeGridModel.columns = this.setHeaderText(treeGridModel.columns, include);\n        var form = this.createElement('form', { id: 'ExportForm', styles: 'display:none;' });\n        var treeGridInput = this.createElement('input', { id: 'treeGridInput', attrs: { name: 'treeGridModel' } });\n        treeGridInput.value = JSON.stringify(treeGridModel);\n        form.method = 'POST';\n        form.action = url;\n        form.appendChild(treeGridInput);\n        document.body.appendChild(form);\n        form.submit();\n        form.remove();\n    };\n    /**\n     * Sets the header text and other properties for an array of columns based on specified criteria.\n     *\n     * @param {Column[]} columns - Defines array of columns\n     * @param {string[]} include - Defines array of sting\n     * @returns {Column[]} returns array of columns\n     */\n    TreeGrid.prototype.setHeaderText = function (columns, include) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = this.getColumnByUid(columns[parseInt(i.toString(), 10)].uid);\n            if (this.stackedHeader && isNullOrUndefined(column)) {\n                column = !isNullOrUndefined(columns[parseInt(i.toString(), 10)].field) ?\n                    this.getColumnByField(columns[parseInt(i.toString(), 10)].field) : columns[parseInt(i.toString(), 10)];\n            }\n            columns[parseInt(i.toString(), 10)].headerText = column.headerText;\n            if (!isNullOrUndefined(column.template)) {\n                columns[parseInt(i.toString(), 10)].template = 'true';\n            }\n            if (columns[parseInt(i.toString(), 10)].format) {\n                columns[parseInt(i.toString(), 10)].format = getNumberFormat(this.getFormat(column.format), column.type, false, this.currencyCode);\n                if (!this.isExcel && (column.type === 'datetime' || column.type === 'date')) {\n                    columns[parseInt(i.toString(), 10)].format = columns[parseInt(i.toString(), 10)].format.toString().replace('AM/PM', 'tt');\n                }\n                columns[parseInt(i.toString(), 10)].type = column.type;\n            }\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.setHeaderText(columns[parseInt(i.toString(), 10)].columns, include);\n            }\n            var keys = Object.keys(columns[parseInt(i.toString(), 10)]);\n            for (var j = 0; j < keys.length; j++) {\n                if (include.indexOf(keys[parseInt(j.toString(), 10)]) < 0) {\n                    delete columns[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                }\n            }\n        }\n        return columns;\n    };\n    /**\n     * Retrieves the appropriate format string from the given format options.\n     *\n     * @param {string | NumberFormatOptions | DateFormatOptions} format - The format options to retrieve the format string from.\n     * @returns {string} The format string extracted from the provided format options.\n     */\n    TreeGrid.prototype.getFormat = function (format) {\n        return typeof (format) === 'object' ? !isNullOrUndefined(format.format) ?\n            format.format : format.skeleton : format;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        if (!isNullOrUndefined(this.locale)) {\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            var locale = L10n.locale;\n            var localeObject = {};\n            setValue(this.locale, {}, localeObject);\n            var gridLocale = void 0;\n            gridLocale = {};\n            gridLocale = getObject(this.locale, locale);\n            var treeGridLocale = void 0;\n            treeGridLocale = {};\n            treeGridLocale = getObject(this.getModuleName(), gridLocale);\n            setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n            L10n.load(localeObject);\n        }\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization && isNullOrUndefined(this.rowTemplate)) {\n                        target = e.target;\n                        if (!isNullOrUndefined(target.querySelectorAll('.e-rowcell'))) {\n                            target = parentsUntil(target, 'e-rowcell');\n                        }\n                        if (!isNullOrUndefined(target)) {\n                            parentTarget = target.parentElement;\n                            if (!isNullOrUndefined(parentTarget)) {\n                                var cellIndex = parentTarget.cellIndex;\n                                if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                                    parentTarget = target;\n                                }\n                                summaryElement = this.findnextRowElement(parentTarget);\n                                if (summaryElement !== null) {\n                                    var cellIndex_1 = target.cellIndex;\n                                    var row_1 = summaryElement.children[parseInt(cellIndex_1.toString(), 10)];\n                                    if (!isNullOrUndefined(row_1) && !this.grid.isEdit) {\n                                        addClass([row_1], 'e-focused');\n                                        addClass([row_1], 'e-focus');\n                                    }\n                                }\n                                else {\n                                    this.clearSelection();\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization && isNullOrUndefined(this.rowTemplate)) {\n                        target = e.target;\n                        if (!isNullOrUndefined(target.querySelectorAll('.e-rowcell'))) {\n                            target = parentsUntil(target, 'e-rowcell');\n                        }\n                        if (!isNullOrUndefined(target)) {\n                            parentTarget = target.parentElement;\n                            if (!isNullOrUndefined(parentTarget)) {\n                                var cellIndex = parentTarget.cellIndex;\n                                if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                                    parentTarget = target;\n                                }\n                                summaryElement = this.findPreviousRowElement(parentTarget);\n                                if (summaryElement !== null) {\n                                    var cellIndex_2 = target.cellIndex;\n                                    if (!isNullOrUndefined(cellIndex_2)) {\n                                        var row_2 = summaryElement.children[parseInt(cellIndex_2.toString(), 10)];\n                                        if (!isNullOrUndefined(row_2) && !this.grid.isEdit) {\n                                            addClass([row_2], 'e-focused');\n                                            addClass([row_2], 'e-focus');\n                                        }\n                                    }\n                                }\n                                else {\n                                    this.clearSelection();\n                                }\n                            }\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.classList.contains('e-childrow-hidden'))) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.classList.contains('e-childrow-hidden'))) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        if (!this.isReact && isNullOrUndefined(this['changedProperties'].columns)) {\n            this.grid[\"\" + splitFrozenCount](this.getColumns());\n        }\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings],\n            name: 'Filter'\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this],\n                name: 'Toolbar'\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this],\n                name: 'ContextMenu'\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings],\n                name: 'Page'\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this],\n                name: 'Reorder'\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this],\n                name: 'Sort'\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this],\n                name: 'Aggregate'\n            });\n        }\n        if (this.resizeCheck()) {\n            modules.push({\n                member: 'resize', args: [this],\n                name: 'Resize'\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this],\n                name: 'ExcelExport'\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if ((this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount()) && freezePresent.length > 0) {\n            modules.push({\n                member: 'freeze', args: [this],\n                name: 'Freeze'\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this],\n                name: 'DetailRow'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this],\n                name: 'PdfExport'\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this],\n                name: 'ColumnMenu'\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this],\n                name: 'ColumnChooser'\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.resizeCheck = function () {\n        var columnMenu = this.showColumnMenu && (!this.columnMenuItems || this.columnMenuItems\n            .filter(function (c) { return c === 'AutoFit' || c === 'AutoFitAll'; }).length) ? true : false;\n        var contextMenu = this.contextMenuItems && this.contextMenuItems\n            .filter(function (c) { return c === 'AutoFit' || c === 'AutoFitAll'; }).length ? true : false;\n        return this.allowResizing || columnMenu || contextMenu;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this],\n                name: 'RowDD'\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this],\n                name: 'Edit'\n            });\n        }\n        if (!isNullOrUndefined(this.columns) && this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this],\n                name: 'CommandColumn'\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this],\n                name: 'Selection'\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this],\n                name: 'VirtualScroll'\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this],\n                name: 'InfiniteScroll'\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n        if (this.element) {\n            EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n            if (this.keyboardModule) {\n                this.keyboardModule.destroy();\n                this.keyboardModule = null;\n            }\n            if (this.allowKeyboard) {\n                this.element.removeAttribute('tabIndex');\n            }\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.grid.vueInstance = this.vueInstance;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        this.actionFailureHandler();\n        var gridContent = this.element.getElementsByClassName('e-gridcontent')[0].childNodes[0];\n        gridContent.setAttribute('tabindex', '0');\n        var contentTable = this.element.getElementsByClassName('e-content')[0].querySelector('.e-table');\n        if (!isNullOrUndefined(contentTable)) {\n            contentTable.setAttribute('role', 'treegrid');\n        }\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.actionFailureHandler = function () {\n        var _this = this;\n        var failureCases = [];\n        var primaryKeyFieldNames = this.getPrimaryKeyFieldNames();\n        var RecordsCount = this.flatData.length;\n        if ((this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing)\n            && primaryKeyFieldNames.length === 0 && RecordsCount !== 0) {\n            failureCases.push('For the CRUD actions, it is necessary to enable Primary Key field for the unique data column.');\n        }\n        if (this.allowRowDragAndDrop && primaryKeyFieldNames.length === 0 && RecordsCount !== 0) {\n            failureCases.push('For the Row Drag and Drop actions, it is necessary to enable Primary Key field for the unique data column.');\n        }\n        if (this.allowPaging && this.enableVirtualization) {\n            failureCases.push('Paging is not allowed in virtualization case.');\n        }\n        if (RecordsCount === 0 && this.columns.length === 0) {\n            failureCases.push('Either of the Data source or columns should be given.');\n        }\n        if (this.frozenColumns > 0 && this.columnModel.filter(function (col) { return col.isFrozen; })) {\n            failureCases.push('Use only one attribute for Frozen either IsFrozen or FrozenColumns.');\n        }\n        if (this.enableVirtualization && !isNullOrUndefined(this.detailTemplate)) {\n            failureCases.push('Virtual scrolling is not compatible with the detail template');\n        }\n        if ((this.frozenColumns > 0 || this.columnModel.filter(function (col) { return col.isFrozen; }) || this.frozenRows > 0)\n            && (!isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.rowTemplate))) {\n            failureCases.push('Frozen rows and columns are not supported with the Detail template and row template.');\n        }\n        if ((this.frozenColumns > 0 || this.columnModel.filter(function (col) { return col.isFrozen; }).length > 0 || this.frozenRows > 0) && this.editSettings.mode === 'Cell') {\n            failureCases.push('Frozen rows and columns are not supported with cell editing.');\n        }\n        if (this.allowSelection && !isNullOrUndefined(this.rowTemplate)) {\n            failureCases.push('Selection is not supported in RowTemplate');\n        }\n        if (this.treeColumnIndex < 0) {\n            failureCases.push('For showing tree structure it is must to set the TreeColumnIndex value.');\n        }\n        if (this.treeColumnIndex >= this.columns.length) {\n            failureCases.push('TreeColumnIndex value should not exceed the total column count.');\n        }\n        if (this.enableVirtualization &&\n            (this.columnModel.some(function (col) { return /%$/.test(col.width); }) ||\n                /%$/.test(this.height.toString()))) {\n            failureCases.push('column width and height should be in pixels');\n        }\n        if ((this.childMapping !== 'Children') && !isNullOrUndefined(this.idMapping)) {\n            failureCases.push('Both IdMapping and ChildMapping should not be used together for tree grid rendering.');\n        }\n        if ((!isNullOrUndefined(this.idMapping) && (isNullOrUndefined(this.parentIdMapping))) ||\n            ((isNullOrUndefined(this.idMapping) && (!isNullOrUndefined(this.parentIdMapping))))) {\n            failureCases.push('IdMapping and ParentIdMapping properties should be defined and vice versa.');\n        }\n        var checkboxColumn = this.columnModel.filter(function (col) { return col.showCheckbox; });\n        var treeColumn = this.columns[this.treeColumnIndex];\n        if (checkboxColumn.length !== 0) {\n            if (checkboxColumn !== treeColumn) {\n                failureCases.push('ShowCheckbox column should not be defined other than the tree column.');\n            }\n            if (checkboxColumn.length > 1) {\n                failureCases.push('Only one column can have the ShowCheckbox option enabled.');\n            }\n        }\n        var alignColumn = this.columnModel.filter(function (col) { return col.textAlign === 'Right' && col.field === _this.columnModel[_this.treeColumnIndex].field; });\n        if (alignColumn.length !== 0) {\n            failureCases.push('TextAlign right for the tree column is not applicable.');\n        }\n        if (failureCases.length > 0) {\n            var failureEventArgs_1 = {\n                error: {}\n            };\n            failureCases.forEach(function (failureCase, index) {\n                failureEventArgs_1.error[parseInt(index.toString(), 10)] = failureCase;\n            });\n            this.trigger(events.actionFailure, failureEventArgs_1);\n        }\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n        var enableHtmlSanitizer = 'enableHtmlSanitizer';\n        this.grid[\"\" + enableHtmlSanitizer] = this.enableHtmlSanitizer;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!this.isFromChartSide && !isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && !this.selectionSettings.checkboxOnly) {\n            if ((!isNullOrUndefined(args.data) && args.data['hasChildRecords']) || (args.rowIndex !== -1 && isNullOrUndefined(args.data))) {\n                args.cancel = true;\n                return;\n            }\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            if (!isNullOrUndefined(args.data) && _this.selectionSettings.persistSelection\n                && _this.columnModel.filter(function (col) { return col.type === 'checkbox'; }).length > 0 && isRemoteData(_this)) {\n                if (!isNullOrUndefined(args.data.parentItem) || args.isHeaderCheckboxClicked) {\n                    _this.parentQuery = _this.query.queries.filter(function (q) { return q.e.field === _this.parentIdMapping; });\n                    _this.query.queries = _this.query.queries.slice(0, 0);\n                }\n            }\n            if (_this.pageSettings.pageSizeMode === 'Root') {\n                _this.grid.selectionModule['totalRecordsCount'] = _this.grid.currentViewData.length;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            if (!isNullOrUndefined(args.data) && _this.selectionSettings.persistSelection\n                && _this.columnModel.filter(function (col) { return col.type === 'checkbox'; }).length > 0 && isRemoteData(_this)) {\n                _this.parentQuery = _this.query.queries.filter(function (q) { return q.e.field === _this.parentIdMapping; });\n                _this.query.queries = _this.query.queries.slice(0, 0);\n            }\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = function (args) {\n            _this.trigger(events.actionFailure, args);\n        };\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = void 0;\n                if (_this.dataResults.result) {\n                    req = 0;\n                }\n                else {\n                    req = 1;\n                }\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection\n                && !isNullOrUndefined(_this.virtualScrollModule.prevSelectedRecord)) {\n                for (var i = 0; i < _this.virtualScrollModule.prevSelectedRecord.length; i++) {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = \n                    // eslint-disable-next-line max-len\n                    _this.getCurrentViewRecords().indexOf(_this.virtualScrollModule.prevSelectedRecord[parseInt(i.toString(), 10)]);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var actualTarget = 'actualTarget';\n            var target = _this.grid.selectionModule[\"\" + actualTarget];\n            if (!isNullOrUndefined(target) && (target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (this.rowTemplate) {\n            if (this.isReact && this.getContentTable().rows.length === 0) {\n                setTimeout(function () {\n                    _this.treeColumnRowTemplate();\n                    if (_this.enableCollapseAll) {\n                        var currentData = _this.getCurrentViewRecords();\n                        var rows = _this.getContentTable().rows;\n                        for (var i = 0; i < rows.length; i++) {\n                            var args = { data: currentData[parseInt(i.toString(), 10)],\n                                row: rows[parseInt(i.toString(), 10)] };\n                            _this.renderModule.RowModifier(args);\n                        }\n                    }\n                }, 0);\n            }\n            else {\n                this.treeColumnRowTemplate();\n            }\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        if (properties.indexOf('columns') > -1 && !isNullOrUndefined(newProp.columns) && this.frozenColumns === 0\n            && this.frozenRows === 0 && !this.columnModel.some(function (col) { return col.isFrozen || col.freeze; })) {\n            this.grid.columns = this.getGridColumns(newProp.columns);\n            this.grid['updateColumnObject']();\n            requireRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        if (isNullOrUndefined(column.template)) {\n            for (var i = 0; i < ignoreOnColumn.length; i++) {\n                delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n                column.filter = {};\n            }\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        var _this = this;\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        var isEllipsisTooltip = 'isEllipsisTooltip';\n        if ((target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse')) &&\n            (this.grid[\"\" + isEllipsisTooltip]())) {\n            this.grid['toolTipObj'].close();\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n        if (this.grid.isCheckBoxSelection && !this.grid.isPersistSelection) {\n            if (this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                var checkedTarget = this.grid.getHeaderContent().querySelector('.e-checkselectall');\n                var checkedLen = this.grid.getSelectedRowIndexes().length;\n                var totalRecords = this.getCurrentViewRecords().length;\n                if (checkedLen === totalRecords) {\n                    var spanEle = checkedTarget.nextElementSibling;\n                    removeClass([spanEle], ['e-stop', 'e-uncheck']);\n                    addClass([spanEle], ['e-check']);\n                }\n            }\n        }\n        if (((target.classList.contains('e-flmenu-cancelbtn') || target.classList.contains('e-flmenu-okbtn')\n            || target.classList.contains('e-content') || target.classList.contains('e-rowcell'))\n            && !isNullOrUndefined(this.grid.filterModule) && this.isReact)) {\n            if (!isNullOrUndefined(this.grid.filterModule['column'])) {\n                if (this.grid.filterModule['column'].filterTemplate) {\n                    var elem = document.getElementById(this.grid.filterModule.filterModule['dlgObj'].element.id);\n                    this.grid.filterModule['fltrDlgDetails'].isOpen = false;\n                    if (this.grid.filterModule.filterModule['dlgObj'] && !this.grid.filterModule.filterModule['dlgObj'].isDestroyed && elem) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        this.clearTemplate(['filterTemplate'], undefined, function () {\n                            _this.grid.filterModule.filterModule['dlgObj'].destroy();\n                        });\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.editModule['closeEdit']();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if ((isNullOrUndefined(fieldName) && (isNullOrUndefined(data)) || (this.getSelectedRecords().length <= 0))) {\n            var error = 'The provided value for the fieldName and data is undefined. Please ensure the fieldName and data contains number.';\n            this.trigger(events.actionFailure, { error: error });\n        }\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && !isNullOrUndefined(this.detailTemplate)) {\n            var error = 'Stacked header is not compatible with the detail template';\n            this.trigger(events.actionFailure, { error: error });\n        }\n        if (this.stackedHeader && this.allowResizing && !isNullOrUndefined(this.columns)) {\n            this.updateColumnsWidth(this.columns);\n        }\n        if (!this.stackedHeader && !isNullOrUndefined(this.columns)) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnsWidth = function (columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (!isNullOrUndefined(column) && column.columns) {\n                _this.updateColumnsWidth(column.columns);\n            }\n            else if (!isNullOrUndefined(column) && column.field) {\n                var currentColumn = _this.grid.getColumnByField(column.field);\n                if (!isNullOrUndefined(currentColumn)) {\n                    column.width = currentColumn.width;\n                }\n            }\n        });\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.setFrozenCount = function () {\n        var persist3 = 'setFrozenCount';\n        this.grid[\"\" + persist3].apply(this.grid);\n    };\n    TreeGrid.prototype.splitFrozenCount = function (columns) {\n        var persist4 = 'splitFrozenCount';\n        this.grid[\"\" + persist4].apply(this.grid, [columns]);\n    };\n    TreeGrid.prototype.isFrozenGrid = function () {\n        return this.grid.isFrozenGrid();\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        var isSummaryRow = 'isSummaryRow';\n        return this.grid.currentViewData.filter(function (e) { return isNullOrUndefined(e[\"\" + isSummaryRow]); });\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        this.isCollapseAll = false;\n        var parentRec = this.parentData;\n        if (!this.enableVirtualization) {\n            parentRec = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        record = this.getCollapseExpandRecords(row, record);\n        if (isNullOrUndefined(row) && isNullOrUndefined(record)) {\n            return;\n        }\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        if (this.isExpandAll && !isRemoteData(this)) {\n            var args = { data: parentRec, row: row, cancel: false };\n            var pagerValuePresent = false;\n            if (this.grid.pagerModule && !isNullOrUndefined(this.grid.pagerModule.pagerObj.pagerdropdownModule)) {\n                pagerValuePresent = this.grid.pagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value ? true : false;\n            }\n            if (!this.isExpandingEventTriggered) {\n                this.trigger(events.expanding, args, function (expandingArgs) {\n                    _this.expandAllPrevent = expandingArgs.cancel;\n                    if (!expandingArgs.cancel && !isNullOrUndefined(record)) {\n                        if (expandingArgs.expandAll) {\n                            _this.expandCollapseAllChildren(record, 'expand', key, level);\n                        }\n                        _this.expandRows(row, record, parentRec);\n                    }\n                });\n            }\n            else if ((!this.allowPaging || (pagerValuePresent && this.grid.pagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === 'All')) &&\n                !this.expandAllPrevent && this.isExpandingEventTriggered) {\n                this.expandRows(row, record, parentRec);\n            }\n            this.isExpandingEventTriggered = true;\n        }\n        else if (!this.isExpandAll || (this.isExpandAll && isRemoteData(this))) {\n            var args = { data: record, row: row, cancel: false };\n            this.trigger(events.expanding, args, function (expandingArgs) {\n                if (!expandingArgs.cancel) {\n                    if (expandingArgs.expandAll) {\n                        _this.expandCollapseAllChildren(record, 'expand', key, level);\n                    }\n                    _this.expandRows(row, record, parentRec);\n                }\n            });\n        }\n    };\n    // Internal method to handle the rows expand\n    TreeGrid.prototype.expandRows = function (row, record, parentRec) {\n        this.expandCollapse('expand', row, record);\n        var children = 'Children';\n        if (!(isRemoteData(this) && !isOffline(this)) && (!isCountRequired(this) || !isNullOrUndefined(record[\"\" + children]))) {\n            var expandArgs = { data: record, row: row };\n            if (!isNullOrUndefined(this.expandStateMapping)) {\n                this.updateExpandStateMapping(expandArgs.data, true);\n            }\n            if (this.isExpandAll && !this.isExpandedEventTriggered) {\n                this.isExpandedEventTriggered = true;\n                expandArgs = { data: parentRec, row: row };\n                this.trigger(events.expanded, expandArgs);\n            }\n            else if (!this.isExpandAll && this.enableVirtualization && this.selectionSettings.persistSelection\n                && !isNullOrUndefined(this.virtualScrollModule.prevSelectedRecord)) {\n                this.virtualScrollModule.prevSelectedRecord = [];\n            }\n            else if (!this.isExpandAll) {\n                this.trigger(events.expanded, expandArgs);\n            }\n        }\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record) && !isNullOrUndefined(row)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                if (this.enableVirtualization && (this.isCollapseAll || this.isExpandAll)) {\n                    if (row.rowIndex === -1) {\n                        record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                    }\n                    else {\n                        record = this.grid.getCurrentViewRecords()[row.rowIndex];\n                    }\n                }\n                else if (this.rowTemplate) {\n                    record = this.grid.getCurrentViewRecords()[row.rowIndex];\n                }\n                else {\n                    record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                }\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        this.isExpandAll = false;\n        var parentRec = this.parentData;\n        if (!this.enableVirtualization) {\n            parentRec = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        record = this.getCollapseExpandRecords(row, record);\n        if (isNullOrUndefined(row) && isNullOrUndefined(record)) {\n            return;\n        }\n        if (this.isCollapseAll && !isRemoteData(this)) {\n            var args = { data: parentRec, row: row, cancel: false };\n            if (!this.isCollapsingEventTriggered) {\n                this.trigger(events.collapsing, args, function (collapsingArgs) {\n                    _this.collapseAllPrevent = collapsingArgs.cancel;\n                    if (!collapsingArgs.cancel) {\n                        if (collapsingArgs.collapseAll) {\n                            _this.expandCollapseAllChildren(record, 'collapse', key);\n                        }\n                        _this.collapseRows(row, record, parentRec);\n                    }\n                });\n            }\n            else if (!this.allowPaging && !this.collapseAllPrevent && this.isCollapsingEventTriggered) {\n                this.collapseRows(row, record, parentRec);\n            }\n            this.isCollapsingEventTriggered = true;\n        }\n        else if (!this.isCollapseAll || (this.isCollapseAll && isRemoteData(this))) {\n            var args = { data: record, row: row, cancel: false };\n            this.trigger(events.collapsing, args, function (collapsingArgs) {\n                if (!collapsingArgs.cancel) {\n                    _this.collapseRows(row, record, parentRec);\n                }\n            });\n        }\n    };\n    // Internal method for handling the rows collapse\n    TreeGrid.prototype.collapseRows = function (row, record, parentRec) {\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        if (!isRemoteData(this)) {\n            if (!isNullOrUndefined(this.expandStateMapping)) {\n                this.updateExpandStateMapping(collapseArgs.data, false);\n            }\n            if (this.isCollapseAll && !this.isCollapsedEventTriggered) {\n                this.isCollapsedEventTriggered = true;\n                collapseArgs = { data: parentRec, row: row };\n                this.trigger(events.collapsed, collapseArgs);\n            }\n            else if (!this.isCollapseAll) {\n                this.trigger(events.collapsed, collapseArgs);\n            }\n            if (this.enableInfiniteScrolling) {\n                var scrollHeight = this.grid.getContent().firstElementChild.scrollHeight;\n                var scrollTop = this.grid.getContent().firstElementChild.scrollTop;\n                if ((scrollHeight - scrollTop) < this.grid.getRowHeight() + +this.height) {\n                    this.grid.getContent().firstElementChild.scrollBy(0, this.grid.getRowHeight());\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        if (this.getCurrentViewRecords().length === 0) {\n            var error = 'The provided value for the datasource is undefined. Please ensure to add the dataSource.';\n            this.trigger(events.actionFailure, { error: error });\n        }\n        this.isExpandedEventTriggered = false;\n        this.isExpandingEventTriggered = false;\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        if (this.getCurrentViewRecords().length === 0) {\n            var error = 'The provided value for the datasource is undefined. Please ensure to add the dataSource.';\n            this.trigger(events.actionFailure, { error: error });\n        }\n        this.isCollapsedEventTriggered = false;\n        this.isCollapsingEventTriggered = false;\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows;\n        if (this.rowTemplate) {\n            rows = [].slice.call(this.grid.getContentTable().querySelectorAll('tr')).filter(function (e) {\n                return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n            });\n        }\n        else {\n            rows = this.getRows().filter(function (e) {\n                return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n            });\n        }\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        if (!isNullOrUndefined(this.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex])) {\n                            this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        if (!this.enableVirtualization) {\n                            this.expandRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                        else if (rows[0].getAttribute('aria-expanded') !== 'true') {\n                            this.expandRow(rows[0]);\n                        }\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && !this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.grid.currentViewData.indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'e-childrow-visible';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'e-childrow-hidden';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && !_this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'e-childrow-visible' : 'e-childrow-hidden';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.grid.currentViewData;\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                this.toggleRowVisibility(rows[parseInt(i.toString(), 10)], displayAction);\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'e-childrow-hidden' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                this.toggleRowVisibility(movableRows[parseInt(i.toString(), 10)], displayAction);\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                this.toggleRowVisibility(freezeRightRows[parseInt(i.toString(), 10)], displayAction);\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization ||\n                this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'e-childrow-hidden' ? true : false;\n                this.toggleRowVisibility(detailrows[parseInt(i.toString(), 10)], displayAction);\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.toggleRowVisibility = function (row, displayAction) {\n        if (row) {\n            row.classList.remove('e-childrow-hidden', 'e-childrow-visible');\n            row.classList.add(displayAction);\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (!gridRow.classList.contains('e-childrow-hidden')) {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        var rows = this.getContentTable().rows;\n        rows = [].slice.call(rows);\n        var rowsObject = this.grid.getRowsObject();\n        for (var i = 0; i < rows.length; i++) {\n            var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                .cells[this.treeColumnIndex];\n            var row = rows[parseInt(i.toString(), 10)];\n            var rowData = rowsObject.length !== 0 ? rowsObject[parseInt(i.toString(), 10)].data : new Object();\n            var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n            this.renderModule.cellRender(arg);\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isNullOrUndefined(isChild) && !isChild && this.loadChildOnDemand) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            this.toggleRowVisibility(rows[parseInt(i.toString(), 10)], 'e-childrow-hidden');\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                this.toggleRowVisibility(movablerows[parseInt(i.toString(), 10)], 'e-childrow-hidden');\n                this.toggleRowVisibility(rightrows[parseInt(i.toString(), 10)], 'e-childrow-hidden');\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, false);\n                }\n            }\n        }\n    };\n    /**\n     * Method to sanitize html element\n     *\n     * @param {any} value - Specifies the html value to sanitize\n     * @returns {any} Returns the sanitized html value\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeGrid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer && typeof (value) === 'string') {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        if (!isNullOrUndefined(this.grid.selectionModule)) {\n            this.grid.selectionModule['actualTarget'] = null;\n        }\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     *\n     * @deprecated This method is deprecated. Use getCellFromIndex method instead.\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     *\n     * @deprecated This method is deprecated. Use getDataRows method instead.\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     *\n     * @deprecated This method is deprecated. Use getRowByIndex method instead.\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     * @deprecated This method is deprecated. Use getRows method instead.\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     *\n     * @deprecated This method is deprecated. Use getRowByIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     *\n     * @deprecated This method is deprecated. Use getRows method instead.\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getDataRows method instead.\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getCellFromIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getColumnHeaderByIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getColumnHeaderByIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getColumnHeaderByIndex method instead.\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(!isNullOrUndefined(this.columns) && this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property('USD')\n    ], TreeGrid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (!isNullOrUndefined(draggedRecord_1[tObj.childMapping])) {\n                    if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                        (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                        !isNullOrUndefined(tObj.parentIdMapping)) {\n                        var childData = (draggedRecord_1[tObj.childMapping]);\n                        for (var j = 0; j < childData.length; j++) {\n                            if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                                dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                                childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                                i += 1;\n                            }\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)\n            && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        if (this.parent.enableVirtualization) {\n            posy = (mouseEvent.type === 'mousemove') ? mouseEvent.clientY : ((!isNullOrUndefined(touchEvent) &&\n                !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].clientY : null);\n        }\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        var sanitize = 'sanitize';\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop && !isNullOrUndefined(args.rows[0])) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (isNullOrUndefined(tObj.rowDropSettings.targetID) && !this.canDrop) {\n            this.removetopOrBottomBorder();\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid' && !isNullOrUndefined(this_1.droppedRecord)) {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            if (!isNullOrUndefined((this.visualData))) {\n                for (var r = 0; r < rows.length; r++) {\n                    rows[parseInt(r.toString(), 10)].index\n                        = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n                }\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                /*this.movableCache = {};\n                this.frozenRightCache = {};*/\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                /*this.movableCache = {};\n                this.frozenRightCache = {};*/\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel, ExportHelper } from '@syncfusion/ej2-grids';\nimport { Data } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var data = new Data(this.parent.grid);\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        if (!isNullOrUndefined(excelExportProperties)) {\n            if (!isNullOrUndefined(excelExportProperties.dataSource) && !excelExportProperties.dataSource['dataSource']) {\n                return this.parent.grid.excelExportModule.Map(this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            }\n            if (excelExportProperties.exportType === 'CurrentPage') {\n                excelExportProperties.dataSource = this.parent.getCurrentViewRecords();\n                return this.parent.grid.excelExportModule.Map(this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            }\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                query.queries = _this.parent.grid.getDataModule().generateQuery().queries;\n                query = ExportHelper.getQuery(_this.parent.grid, data);\n                if (isNullOrUndefined(_this.parent.filterModule)) {\n                    query.queries = query.queries.slice(1, 2);\n                    query.params = query.params.slice(0, 0);\n                }\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        if (!isNullOrUndefined(this.parent.grid.getDataModule())) {\n            setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        }\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        if (this.parent.aggregates.length > 0) {\n            property.query = args['query'];\n        }\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        prop.query = args['query'];\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        if (isNullOrUndefined(message)) {\n            var error = 'The provided value for the message is undefined. Please ensure the message contains string.';\n            this.parent.trigger(events.actionFailure, { error: error });\n        }\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && (pageingDetails.actionArgs.action !== 'collapse' &&\n                pageingDetails.actionArgs.action !== 'expand')) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && (!targetElement.classList.contains('e-rowcell') ||\n                targetElement.querySelectorAll('.e-gridform').length !== 0))) {\n                for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n                    var items = _a[_i];\n                    if (items.text === 'Outdent' || items.text === 'Indent') {\n                        tObj.grid.contextMenuModule['hiddenItems'].push(items.text);\n                    }\n                }\n                tObj.grid.contextMenuModule.contextMenu.hideItems(tObj.grid.contextMenuModule['hiddenItems']);\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level)) {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level)) {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0)) {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (((indent || outdent) || tObj.grid.isEdit) && isNullOrUndefined(selectedrow)) {\n                for (var _b = 0, _c = args.items; _b < _c.length; _b++) {\n                    var items = _c[_b];\n                    if (items.text === 'Outdent' || items.text === 'Indent') {\n                        tObj.grid.contextMenuModule['hiddenItems'].push(items.text);\n                    }\n                }\n                tObj.grid.contextMenuModule.contextMenu.hideItems(tObj.grid.contextMenuModule['hiddenItems']);\n                indent.style.display = outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.column.index;\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.column.index)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        var rowElement = Array.isArray(args.row) ? args.row[0] : args.row;\n        if (!isNullOrUndefined(rowElement) && this.parent.getSelectedRows().indexOf(rowElement) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = rowElement.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getHeaderContent()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].index)) {\n                    addRowIndex = 0;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n        if (e.target.classList.contains('e-frame') && this.parent.getCurrentViewRecords().length === 0) {\n            this.doubleClickTarget = null;\n        }\n        if (e.target.classList.contains('e-treegridcollapse') || e.target.classList.contains('e-treegridexpand')) {\n            var tr = parentsUntil(e.target, 'e-row');\n            var rowIndex = tr && parseInt(tr.getAttribute('data-rowindex'), 10);\n            if (!isNullOrUndefined(rowIndex) && rowIndex >= 0 && this.parent.allowPaging) {\n                /* eslint-disable-next-line */\n                this.parent.grid.getDataRows()[rowIndex].dataset.uid = this.parent.grid.contentModule.getRows()[rowIndex].uid;\n            }\n        }\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionBegin, args);\n        }\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args['requestType'] = 'cancel';\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = !isNullOrUndefined(treeObj.dataSource)\n            && treeObj.dataSource.adaptor;\n        if (!isNullOrUndefined(adaptor) && (isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getRows();\n            var movableRowsObject = this.parent.grid.getRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            if (!isNullOrUndefined(this.editedRowIndex)) {\n                cellDetails.rowIndex = this.editedRowIndex;\n            }\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        setValue('isEdit', false, this.parent.grid);\n                        this.afterCellSave(args, row_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    if (this.parent['isGantt'] && this.parent.loadChildOnDemand) {\n                        this.updateCell(args, rowIndex_1);\n                        setValue('isEdit', false, this.parent.grid);\n                        this.afterCellSave(args, row_1);\n                    }\n                    else {\n                        var crud = null;\n                        crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                        crud.then(function (e) {\n                            if (!isNullOrUndefined(e)) {\n                                args.rowData[args.columnName] = e[args.columnName];\n                            }\n                            _this.updateCell(args, rowIndex_1);\n                            setValue('isEdit', false, _this.parent.grid);\n                            _this.afterCellSave(args, row_1);\n                        });\n                    }\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row) {\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else if (!this.parent.enableVirtualization) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.isScrollByFocus = true;\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && args.requestType !== 'delete' && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            var selectedRecords = this.parent.getSelectedRecords()[0];\n            if ((this.isAddedRowByMethod || (this.isAddedRowByContextMenu && this.parent.grid.selectedRowIndex !== -1)) &&\n                (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else if (!isNullOrUndefined(selectedRecords)) {\n                this.addRowRecord = selectedRecords;\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' &&\n            !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        if (isNullOrUndefined(this.addRowRecord) && this.parent.getCurrentViewRecords().length > this.addRowIndex &&\n            args.requestType === 'save' && this.parent.getSelectedRecords().length !== 0) {\n            this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    level = 0;\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.closeEdit = function () {\n        if (this.parent.enableVirtualization && this.parent.grid.editSettings.mode === 'Batch' && this.parent.grid.pageSettings.currentPage > 1) {\n            this.editedRowIndex = this.parent.grid.editModule.editModule['cellDetails'].rowIndex;\n            this.parent.grid.editModule.editModule['cellDetails'].rowIndex = parseInt(this.parent.getRows()[this.parent.grid.editModule.editModule['cellDetails'].rowIndex].getAttribute('data-rowIndex'), 10);\n        }\n        this.parent.grid.editModule.closeEdit();\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            this.parent['toggleRowVisibility'](args.detailrows[parseInt(i.toString(), 10)], args.action);\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        if (this.parent.enableVirtualization && this.parent.isFrozenGrid()) {\n            return this.getRowCollection(index, true);\n        }\n        var dataRows = this.parent.getDataRows();\n        var targetRow = dataRows.find(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; });\n        if (!targetRow && this.parent.isEdit && this.parent.editSettings.mode === 'Batch') {\n            return index != null ? this.parent.getRows()[parseInt(index.toString(), 10)] : undefined;\n        }\n        return targetRow;\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = this.parent.getDataRows();\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if ((this.recordAdded || args.requestType === 'delete' && this.endIndex > args.count - this.parent.pageSettings.pageSize) && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        if ((this.endIndex - this.startIndex !== this.parent.pageSettings.pageSize) &&\n            (this.totalRecords > this.parent.pageSettings.pageSize)\n            && (this.endIndex === this.totalRecords)) {\n            args.startIndex = this.endIndex - this.parent.pageSettings.pageSize;\n            args.endIndex = this.endIndex;\n        }\n        else {\n            args.startIndex = this.startIndex;\n            args.endIndex = this.endIndex;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                var gObj = _this.parent;\n                if (gObj.root.enablePersistence && gObj.root.scrollPosition) {\n                    _this.content.scrollTop = gObj.root.scrollPosition.top;\n                    if (gObj.root.enableColumnVirtualization) {\n                        _this.content.scrollLeft = gObj.root.scrollPosition.left;\n                    }\n                    var scrollValues = {\n                        direction: 'down', sentinel: _this.observer.sentinelInfo.down,\n                        offset: gObj.root.scrollPosition, focusElement: gObj.element\n                    };\n                    _this.scrollListeners(scrollValues);\n                }\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !isNullOrUndefined(this.parent.getRowByIndex(0)) && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n        this.parent.notify('virtualTransform', { requestType: 'transformChange' });\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent.clipboardModule['treeGridParent'].editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent.clipboardModule['treeGridParent'].editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        if (this.parent.root.enablePersistence) {\n            this.parent.root.scrollPosition = scrollArgs.offset;\n        }\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content;\n        if (!isNullOrUndefined(this.parent.contentModule)) {\n            content = this.parent.getContent().querySelector('.e-content');\n        }\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') && !isNullOrUndefined(content)) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? parseInt(this.parent.height.toString(), 10) :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex] &&\n                ((this.parent.rowHeight * this.parent.pageSettings.pageSize) < content.scrollTop)) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.endIndex - this.startIndex < this.parent.pageSettings.pageSize) {\n                    this.translateY = !isNullOrUndefined(this.endIndex) ?\n                        (this.endIndex - this.parent.pageSettings.pageSize) * (this.parent.rowHeight ?\n                            this.parent.rowHeight : this.parent.getRowHeight()) : 0;\n                }\n                else {\n                    this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                        scrollArgs.offset.top - (outBuffer * rowHeight) + rowHeight : 0;\n                }\n            }\n            else if (this.parent.getFrozenColumns() > 0) {\n                scrollArgs.offset.top = scrollArgs.offset.top + 80;\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') && !isNullOrUndefined(content)) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock || isNullOrUndefined(this['' + selectedRowIndex]) ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if ((nextSetResIndex + this.parent.pageSettings.pageSize) > this.totalRecords && (this.endIndex - this.startIndex) <\n                (this.parent.pageSettings.pageSize / 2) && (this.endIndex - nextSetResIndex) < (this.parent.pageSettings.pageSize / 2)) {\n                this.startIndex = lastIndex - (this.parent.pageSettings.pageSize / 2);\n            }\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            var selectedIndex = this.parent.root.selectedRowIndex;\n            this.startIndex = selectedIndex !== -1 && selectedIndex !== this.startIndex ? this.startIndex - 1 : this.startIndex;\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.totalRecords === this.endIndex) {\n                    this.translateY = (this.totalRecords * rowHeight) - ((this.endIndex - this.startIndex) * rowHeight);\n                }\n                else {\n                    if (this.parent.getFrozenColumns() > 0) {\n                        this.translateY = scrollArgs.offset.top - ((rowHeight * 2) + this.parent.pageSettings.pageSize);\n                    }\n                    else {\n                        this.translateY = scrollArgs.offset.top;\n                    }\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (downScroll && this.endIndex === this.totalRecords && viewInfo.loadNext) {\n                viewInfo.loadNext = false;\n            }\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        var isScrollByFocus = 'isScrollByFocus';\n        return function (e) {\n            if (instance.isEdit && instance.root.editModule[\"\" + isScrollByFocus]) {\n                instance.root.editModule[\"\" + isScrollByFocus] = false;\n                return;\n            }\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var containerRect = 'containerRect';\n            _this[\"\" + containerRect] = _this[\"\" + options].container.getBoundingClientRect();\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer, getTransformValues } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.setEndIndexToGantt = true;\n        this.prevendIndex = -1;\n        this.prevSelectedRecord = [];\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        if (getValue('isCollapseAll', this.parent) && this.parent.selectionSettings.persistSelection && this.parent.getSelectedRecords().length > 0) {\n            this.prevSelectedRecord = this.parent.getSelectedRecords();\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count, requestType: pageingDetails.actionArgs.requestType };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' || (requestType === 'refresh' && getValue('isExpandAll', this.parent)) ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length && isNullOrUndefined(this.expandCollapseRec))) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            if ((requestType === 'save' && pageingDetails.actionArgs.index >= (counts.count - this.parent.grid.pageSettings.pageSize)) || (requestType === 'refresh' && this.parent['isGantt'] && this.parent['isAddedFromGantt'])) {\n                if (this.setEndIndexToGantt) {\n                    this.ganttEndIndex = counts.endIndex;\n                }\n                if ((counts.endIndex + this.parent.pageSettings.pageSize >= counts.count && (this.parent.root && counts.count - this.ganttEndIndex === this.visualData.length - this.parent.root['previousFlatData'].length))\n                    || !(this.parent['isGantt'] && this.parent['isAddedFromGantt'])) {\n                    startIndex = counts.startIndex + (counts.count - counts.endIndex);\n                    endIndex = counts.count;\n                    this.setEndIndexToGantt = false;\n                }\n                this.ganttEndIndex = endIndex;\n                this.parent['isAddedFromGantt'] = false;\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            var virtualWrapperElement = this.parent.grid.contentModule.virtualEle.wrapper;\n            var translateY = getTransformValues(virtualWrapperElement).height;\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length) && translateY === 0) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if (this.prevrequestType === 'collapseAll' && pageingDetails.actionArgs.requestType === 'virtualscroll'\n                && !isNullOrUndefined(this.parent.idMapping) && startIndex === 0) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if (endIndex === 0 && visualData.length > 0) {\n                pageingDetails.result = visualData;\n            }\n            else {\n                pageingDetails.result = visualData.slice(startIndex, endIndex);\n            }\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n            this.prevrequestType = pageingDetails.actionArgs.requestType;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (parentGrid.enableColumnVirtualization) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parseInt(parentGrid.height.toString(), 10) :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            this.parent['toggleRowVisibility'](row, args.action);\n            if (freeze && frozenRightRows.length) {\n                this.parent['toggleRowVisibility'](frozenRightRows[parseInt(i.toString(), 10)], args.action);\n            }\n            var queryselector = args.action === 'e-childrow-hidden' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getRowsObject();\n                var mRowElms = this.parent.grid.getRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getContent().querySelector('tbody')\n                : this.parent.grid.getContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getHeaderContent().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getHeaderContent().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Column","options","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","TreeGridColumn","_super","apply","Property","StackedColumn","LoadingIndicator","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","_a","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","persistSelection","col","query","queries","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","error","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","currentViewData","recordIndex","checkboxRecord","tr","movableTr","getDataRows","allowPaging","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","pageSettings","pageSizeMode","enableCollapseAll","rowsObj","getRowsObject","isFrozenGrid","visible","proxy_1","parentrec","rowDragAndDropModule","getContentTable","scrollHeight","getContent","clientHeight","getVisibleRecords","isReact","thisRef_1","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","loadChildOnDemand","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","treeColumn","rowTemplate","thisRef_2","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","thisRef_3","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","callBack","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","executeQuery","then","DataUtil","distinct","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","searchString","expands","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","isExpandCollapse","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","idMappingValue","isNaN","take","pageSize","expandDetail","filterqry","predicates","showSpinner","inx","haveChild","resultChildData","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","hasChildren","shouldCount","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","isFromChartSide","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","TreeLogger","mergePersistTreeGridData","injectedModules","FreezeColumn","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","serverExcelExport","url","isExcel","exportTreeGrid","serverPdfExport","serverCsvExport","state","processQuery","JSON","parse","treeGridModel","addOnPersist","include","fields","search","sorted","setHeaderText","form","treeGridInput","name","stringify","method","document","body","submit","remove","getColumnByField","getFormat","currencyCode","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","getColumnByIndex","editType","findnextRowElement","cellIndex_1","row_1","isEdit","clearSelection","findPreviousRowElement","cellIndex_2","row_2","summaryRowElement","previousElementSibling","infiniteScrollData","remoteCollapsedData","remoteExpandedData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","resizeCheck","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","columnMenu","columnMenuItems","contextMenu","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","removeAttribute","loggerModule","render","portals","isVue","vueInstance","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","actionFailureHandler","childNodes","contentTable","refreshToolbarItems","renderComplete","destroyTemplateFn","failureCases","primaryKeyFieldNames","RecordsCount","isFrozen","test","checkboxColumn","textAlign","failureEventArgs_1","failureCase","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","getGridEditSettings","clipMode","enableHtmlSanitizer","triggerEvents","IsExpandCollapseClicked","checkboxOnly","bindGridEvents","rowSelecting","isHeaderCheckboxClicked","parentQuery","selectionModule","rowDeselecting","rowSelected","selectedRowIndexes","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","updateRowSelection","virtualScrollModule","prevSelectedRecord","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","dataManager","isQueryInvokedFromData","callBackPromise_2","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","movableContent","frozenContent","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","enablePersistence","treeColumnTextAlign","treeColumnField","onPropertyChanged","newProp","properties","requireRefresh","freeze","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","getElementById","getPersistData","keyEntity","ignoreOnPersist","scrollPosition","ignoreOnColumn","currentObject","val","ignoreInArrays","ignoreInColumn","touches","isEditCollapse","close","isCheckBoxSelection","isPersistSelection","checkedTarget","filterTemplate","elem","isOpen","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","sHeight","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","updateColumnsWidth","currentColumn","mergeColumns","storedColumn","setFrozenCount","splitFrozenCount","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","parentRec","getCollapseExpandRecords","pagerValuePresent","pagerObj","pagerdropdownModule","isExpandingEventTriggered","expandAllPrevent","expandRows","expandingArgs","expandCollapseAllChildren","expandCollapse","expandArgs","updateExpandStateMapping","isExpandedEventTriggered","isCollapsingEventTriggered","collapseAllPrevent","collapseRows","collapsingArgs","collapseArgs","isCollapsedEventTriggered","firstElementChild","scrollTop","getRowHeight","scrollBy","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","lastrowIdx","lastRow","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","gridRowsObject","currentIndex","toggleRowVisibility","visibleRowCount","gridRow","rowsObject","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","sanitize","SanitizeHtmlHelper","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","selectRow","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getMovableDataRows","getMovableRowByIndex","getMovableRows","getFrozenRightRowByIndex","getFrozenRightRows","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","clientY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","getTargetIdx","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","fromIndex","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Data","Promise","isLocal","ExportHelper","getQuery","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","_b","_c","hideItems","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","isArray","parentRowIndex","getRowElementByUID","totalCount","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","dataset","addArgs","dataRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","columnObject","toolbarID","cellDetails","editedRowIndex","treeCell","afterCellSave","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","errors","isScrollByFocus","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getRowCollection","find","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","rowCollection","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","gObj","scrollValues","sentinel","observer","sentinelInfo","down","offset","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","gridTop","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","outBuffer","downScroll","vHeight","lastInx","remains","isRowSelected","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","cBlock","cOffset","cIndex","setWrapperWidth","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","setEndIndexToGantt","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","ganttEndIndex","virtualWrapperElement","wrapper","getTransformValues","resourceCount","sIndex","prevrequestType","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","Freeze","dblClickHandler","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","rowRenderer","RowRenderer","childRowObjects","childRowElements","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRows","mRowElms","tbody","currentRows","isFrozenRows","newRow","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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"}